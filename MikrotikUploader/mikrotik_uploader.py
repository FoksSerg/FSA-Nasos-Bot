#!/usr/bin/env python3
"""
MikrotikUploader - –ó–∞–≥—Ä—É–∑—á–∏–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ –Ω–∞ RouterOS —á–µ—Ä–µ–∑ API –ø—Ä–æ—Ç–æ–∫–æ–ª

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É .rsc —Å–∫—Ä–∏–ø—Ç–æ–≤ –Ω–∞ —Ä–æ—É—Ç–µ—Ä—ã Mikrotik —á–µ—Ä–µ–∑
–±–∏–Ω–∞—Ä–Ω—ã–π API –ø—Ä–æ—Ç–æ–∫–æ–ª. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
- –ó–∞–≥—Ä—É–∑–∫—É –æ–±—ã—á–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ (–¥–æ 15KB)
- –ó–∞–≥—Ä—É–∑–∫—É –±–æ–ª—å—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –Ω–∞ —á–∞—Å—Ç–∏
- –ü—Ä–æ–≤–µ—Ä–∫—É —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–æ–≤ –∏ —à–µ–¥—É–ª–µ—Ä–æ–≤
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
- –†–∞–±–æ—Ç—É —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∞–º–∏ (ASCII, UTF-8)

–ü—Ä–æ—Ç–æ–∫–æ–ª API Mikrotik:
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç TCP —Å–æ–∫–µ—Ç—ã –Ω–∞ –ø–æ—Ä—Ç 8728
- –ö–∞–∂–¥–æ–µ "—Å–ª–æ–≤–æ" –∫–æ–¥–∏—Ä—É–µ—Ç—Å—è —Å –¥–ª–∏–Ω–æ–π –≤ –Ω–∞—á–∞–ª–µ
- "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" - –Ω–∞–±–æ—Ä —Å–ª–æ–≤, –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏–π—Å—è –ø—É—Å—Ç—ã–º —Å–ª–æ–≤–æ–º
- –û—Ç–≤–µ—Ç—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å !done (—É—Å–ø–µ—Ö), !trap (–æ—à–∏–±–∫–∞), !re (–¥–∞–Ω–Ω—ã–µ)

–ê–≤—Ç–æ—Ä: NasosRunner Project
–í–µ—Ä—Å–∏—è: 2.0 —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤
"""

import socket   # –î–ª—è TCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
import os       # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import codecs   # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∞–º–∏ —Ñ–∞–π–ª–æ–≤
import time     # –î–ª—è –ø–∞—É–∑ –º–µ–∂–¥—É –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
import glob     # –î–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ –º–∞—Å–∫–µ
import sys      # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
import re       # –î–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π (–æ—á–∏—Å—Ç–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤)

def find_codenosos_dir():
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–∞–ø–∫–∏ CodeNasos –Ω–∞—á–∏–Ω–∞—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –∏ –ø–æ–¥–Ω–∏–º–∞—è—Å—å –≤–≤–µ—Ä—Ö.
    
    –ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–∏—Å–∫–∞:
    1. –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
    2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ CodeNasos –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    3. –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - –ø–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
    4. –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–æ –∫–æ—Ä–Ω—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∏–ª–∏ –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º
    
    Returns:
        str: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ CodeNasos
        None: –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    """
    current_dir = os.path.dirname(os.path.abspath(__file__))
    
    # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –º–∞–∫—Å–∏–º—É–º –Ω–∞ 5 —É—Ä–æ–≤–Ω–µ–π –≤–≤–µ—Ä—Ö (–∑–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞)
    for _ in range(5):
        codenosos_path = os.path.join(current_dir, 'CodeNasos')
        if os.path.exists(codenosos_path) and os.path.isdir(codenosos_path):
            return codenosos_path
        
        # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –≤—ã—à–µ
        parent_dir = os.path.dirname(current_dir)
        if parent_dir == current_dir:  # –î–æ—Å—Ç–∏–≥–ª–∏ –∫–æ—Ä–Ω—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
            break
        current_dir = parent_dir
    
    return None

class MikrotikUploader:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–≤ –Ω–∞ Mikrotik —á–µ—Ä–µ–∑ API –ø—Ä–æ—Ç–æ–∫–æ–ª.
    
    –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–æ—É—Ç–µ—Ä—É —á–µ—Ä–µ–∑ API (–ø–æ—Ä—Ç 8728)
    - –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞–∑–º–µ—Ä–∞
    - –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –±–æ–ª—å—à–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –Ω–∞ —á–∞—Å—Ç–∏
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —á–∞—Å—Ç–µ–π —á–µ—Ä–µ–∑ scheduler
    - –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –æ–ø–µ—Ä–∞—Ü–∏–π
    
    –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ–ª—å—à–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏:
    1. –§–∞–π–ª —Ä–∞–∑–¥–µ–ª—è–µ—Ç—Å—è –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ 15KB
    2. –ö–∞–∂–¥–∞—è —á–∞—Å—Ç—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–∞–∫ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç (script-TEMP1, script-TEMP2...)
    3. –°–æ–∑–¥–∞–µ—Ç—Å—è combine-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —á–∞—Å—Ç–µ–π
    4. –ß–µ—Ä–µ–∑ scheduler –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è combine-—Å–∫—Ä–∏–ø—Ç
    5. Combine-—Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∏ —É–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏
    """
    
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ —Å—á–µ—Ç—á–∏–∫–æ–≤.
        
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç:
        - IP –∞–¥—Ä–µ—Å —Ä–æ—É—Ç–µ—Ä–∞ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞)
        - –î–∞–Ω–Ω—ã–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å)
        - –ü–æ—Ä—Ç API (8728 - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä—Ç Mikrotik API)
        - –°—á–µ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω—ã—Ö –∏ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
        """
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–æ—É—Ç–µ—Ä—É Mikrotik
        self.router_ip = "10.10.55.1"        # IP –∞–¥—Ä–µ—Å —Ä–æ—É—Ç–µ—Ä–∞
        self.username = "FokinSA"             # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è API
        self.password = "gjhfvtyznm"          # –ü–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.port = 8728                      # –ü–æ—Ä—Ç API Mikrotik (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π)
        
        # –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–≥—Ä—É–∑–∫–∏
        self.uploaded_count = 0               # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        self.failed_count = 0                 # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫
        
    def connect(self):
        """
        –°–æ–∑–¥–∞–Ω–∏–µ TCP —Å–æ–∫–µ—Ç–∞ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–æ—É—Ç–µ—Ä—É.
        
        –ü—Ä–æ—Ü–µ—Å—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
        1. –°–æ–∑–¥–∞–Ω–∏–µ TCP —Å–æ–∫–µ—Ç–∞ –¥–ª—è IPv4
        2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è
        3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É IP –∏ –ø–æ—Ä—Ç—É
        
        Raises:
            socket.error: –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Ä–æ—É—Ç–µ—Ä—É
            socket.timeout: –ü—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ —Ç–∞–π–º–∞—É—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        """
        print(f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {self.router_ip}...")
        
        # –°–æ–∑–¥–∞–µ–º TCP —Å–æ–∫–µ—Ç –¥–ª—è IPv4 (AF_INET) –∏ –ø–æ—Ç–æ–∫–æ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª (SOCK_STREAM)
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å —Å–æ–∫–µ—Ç–æ–º
        # –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Å–≤—è–∑–∏
        self.sock.settimeout(60)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Ä–æ—É—Ç–µ—Ä—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É IP –∏ –ø–æ—Ä—Ç—É
        self.sock.connect((self.router_ip, self.port))
        
    def write_word(self, word):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–¥–Ω–æ–≥–æ "—Å–ª–æ–≤–∞" —á–µ—Ä–µ–∑ API –ø—Ä–æ—Ç–æ–∫–æ–ª Mikrotik.
        
        –ü—Ä–æ—Ç–æ–∫–æ–ª –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏–Ω—ã –≤ API Mikrotik:
        - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ < 128 –±–∞–π—Ç (0x80): –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è 1 –±–∞–π—Ç –¥–ª–∏–Ω—ã
        - –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ < 16384 –±–∞–π—Ç (0x4000): –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è 2 –±–∞–π—Ç–∞ –¥–ª–∏–Ω—ã 
          —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º —Å—Ç–∞—Ä—à–∏–º –±–∏—Ç–æ–º (0x8000)
        - –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å–∞–º–∏ –¥–∞–Ω–Ω—ã–µ
        
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏:
        - –£–¥–∞–ª—è—é—Ç—Å—è –≤—Å–µ –Ω–µ-ASCII —Å–∏–º–≤–æ–ª—ã –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å RouterOS
        - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è ASCII –∫–æ–¥–∏—Ä–æ–≤–∫–∞ —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫
        - RouterOS API —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å ASCII —Å–∏–º–≤–æ–ª–∞–º–∏
        
        Args:
            word (str|bytes): –°–ª–æ–≤–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏. –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π –∏–ª–∏ –±–∞–π—Ç–∞–º–∏.
        
        Note:
            –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ä–µ–∞–ª–∏–∑—É–µ—Ç –Ω–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –ø—Ä–æ—Ç–æ–∫–æ–ª API Mikrotik.
            –ö–∞–∂–¥–æ–µ "—Å–ª–æ–≤–æ" - —ç—Ç–æ –∞—Ç–æ–º–∞—Ä–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ.
        """
        if isinstance(word, bytes):
            # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É–∂–µ –≤ –±–∞–π—Ç–∞—Ö - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å
            data = word
        else:
            # –û—á–∏—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –æ—Ç –Ω–µ-ASCII —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å RouterOS
            # RouterOS API –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Unicode —Å–∏–º–≤–æ–ª—ã
            word = re.sub(r'[^\x00-\x7F]+', '', word)
            
            # –ö–æ–¥–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ ASCII —Å –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ–º –æ—à–∏–±–æ–∫
            # errors="ignore" –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–ª—å–∑—è –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å
            data = word.encode("ascii", errors="ignore")
                
        length = len(data)
        
        # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª–∏–Ω—ã –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—É API Mikrotik
        if length < 0x80:  # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –º–µ–Ω—å—à–µ 128 –±–∞–π—Ç
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–ª–∏–Ω—É –≤ –æ–¥–Ω–æ–º –±–∞–π—Ç–µ (big-endian)
            self.sock.send(length.to_bytes(1, byteorder='big'))
        elif length < 0x4000:  # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –º–µ–Ω—å—à–µ 16384 –±–∞–π—Ç
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—à–∏–π –±–∏—Ç (0x8000) –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ 2 –±–∞–π—Ç–∞—Ö
            # –§–æ—Ä–º—É–ª–∞: (–¥–ª–∏–Ω–∞ | 0x8000) —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–ª–∞–≥ –º–Ω–æ–≥–æ–±–∞–π—Ç–æ–≤–æ–π –¥–ª–∏–Ω—ã
            self.sock.send(((length | 0x8000) & 0xFFFF).to_bytes(2, byteorder='big'))
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª–∏–Ω—ã
        self.sock.send(data)
        
    def write_sentence(self, words):
        """
        –û—Ç–ø—Ä–∞–≤–∫–∞ "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" (–∫–æ–º–∞–Ω–¥—ã) —á–µ—Ä–µ–∑ API.
        
        –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ API Mikrotik - —ç—Ç–æ –ø–æ–ª–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, —Å–æ—Å—Ç–æ—è—â–∞—è –∏–∑:
        1. –ö–æ–º–∞–Ω–¥—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, "/system/script/add")
        2. –ü–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "=name=script_name", "=source=content")
        3. –ü—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –º–∞—Ä–∫–µ—Ä–∞ –∫–æ–Ω—Ü–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        
        –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π:
        - ["/login", "=name=admin", "=password=123"] - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        - ["/system/script/print"] - –≤—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
        - ["/system/script/add", "=name=test", "=source=:put hello"] - —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
        
        Args:
            words (list): –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ (—Å—Ç—Ä–æ–∫) –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞–∫ –æ–¥–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
        
        Note:
            –ö–∞–∂–¥–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –ø—É—Å—Ç—ã–º —Å–ª–æ–≤–æ–º.
            –≠—Ç–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–µ—Ä–≤–µ—Ä—É –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.
        """
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏
        for word in words:
            self.write_word(word)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–µ —Å–ª–æ–≤–æ –∫–∞–∫ –º–∞—Ä–∫–µ—Ä –∫–æ–Ω—Ü–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        # –≠—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ API
        self.write_word('')
        
    def read_word(self):
        """
        –ß—Ç–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ "—Å–ª–æ–≤–∞" –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Ä–æ—É—Ç–µ—Ä–∞.
        
        –ü—Ä–æ—Ç–æ–∫–æ–ª –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª–∏–Ω—ã:
        1. –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–π –±–∞–π—Ç –¥–ª–∏–Ω—ã
        2. –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Å—Ç–∞—Ä—à–∏–π –±–∏—Ç (0x80) - —á–∏—Ç–∞–µ–º –≤—Ç–æ—Ä–æ–π –±–∞–π—Ç
        3. –í—ã—á–∏—Å–ª—è–µ–º –ø–æ–ª–Ω—É—é –¥–ª–∏–Ω—É –¥–∞–Ω–Ω—ã—Ö
        4. –ß–∏—Ç–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–π—Ç –¥–∞–Ω–Ω—ã—Ö
        
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–æ–∫:
        - –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ ASCII (–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ API)
        - –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ UTF-8 —Å –∑–∞–º–µ–Ω–æ–π –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
        - –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏ RouterOS
        
        Returns:
            str: –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –∏–∑ –æ—Ç–≤–µ—Ç–∞ —Ä–æ—É—Ç–µ—Ä–∞
            
        Raises:
            socket.error: –ü—Ä–∏ –æ—à–∏–±–∫–µ —á—Ç–µ–Ω–∏—è –∏–∑ —Å–æ–∫–µ—Ç–∞
            
        Note:
            –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –¥–ª—è —á—Ç–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ recv(),
            —Ç–∞–∫ –∫–∞–∫ TCP –º–æ–∂–µ—Ç –¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ —á–∞—Å—Ç—è–º–∏.
        """
        ret = b''  # –ë—É—Ñ–µ—Ä –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –±–∞–π—Ç–æ–≤ —Å–ª–æ–≤–∞
        
        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–π –±–∞–π—Ç –¥–ª–∏–Ω—ã (–≤—Å–µ–≥–¥–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç)
        length = int.from_bytes(self.sock.recv(1), byteorder='big')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—à–∏–π –±–∏—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–ª–∏–Ω—ã
        if length & 0x80:  # –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –±–∏—Ç 0x80
            # –î–ª–∏–Ω–∞ –∫–æ–¥–∏—Ä—É–µ—Ç—Å—è –≤ 2 –±–∞–π—Ç–∞—Ö
            # –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—à–∏–π –±–∏—Ç –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –±–∞–π—Ç–∞ –∏ –æ–±—ä–µ–¥–∏–Ω—è–µ–º —Å–æ –≤—Ç–æ—Ä—ã–º
            length = ((length & 0x7F) << 8) | int.from_bytes(self.sock.recv(1), byteorder='big')
        
        # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã–∑–æ–≤–æ–≤ recv)
        while length > 0:
            t = self.sock.recv(length)  # –ß–∏—Ç–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –±–∞–π—Ç—ã
            ret += t                    # –î–æ–±–∞–≤–ª—è–µ–º –∫ –±—É—Ñ–µ—Ä—É
            length -= len(t)            # –£–º–µ–Ω—å—à–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –±–∞–π—Ç
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–π—Ç–æ–≤ –≤ —Å—Ç—Ä–æ–∫—É
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º ASCII (–æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞ API Mikrotik)
            return ret.decode("ascii", errors="ignore")
        except UnicodeDecodeError:
            # –ü—Ä–∏ –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º UTF-8 —Å –∑–∞–º–µ–Ω–æ–π –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤
            # errors='replace' –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –Ω–∞ '?'
            return ret.decode('utf-8', errors='replace')
        
    def read_sentence(self):
        """
        –ß—Ç–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ "–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è" (–æ—Ç–≤–µ—Ç–∞) –æ—Ç —Ä–æ—É—Ç–µ—Ä–∞.
        
        –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —á–∏—Ç–∞–µ—Ç—Å—è –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ª–æ–≤–∞ (–º–∞—Ä–∫–µ—Ä –∫–æ–Ω—Ü–∞).
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏.
        
        –¢–∏–ø—ã –æ—Ç–≤–µ—Ç–æ–≤ RouterOS API:
        - !done - –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
        - !trap - –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã  
        - !re - —Å—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Å–ø–∏—Å–∫–æ–≤)
        - !fatal - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ (—Ä–∞–∑—Ä—ã–≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)
        
        –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:
        ["!done"] - –ø—Ä–æ—Å—Ç–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        ["!re", "=name=script1", "=policy=read,write", "!done"] - –¥–∞–Ω–Ω—ã–µ + –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        ["!trap", "=message=syntax error"] - –æ—à–∏–±–∫–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
        
        Returns:
            list: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏. –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö.
            
        Note:
            –ú–µ—Ç–æ–¥ –±–ª–æ–∫–∏—Ä—É—é—â–∏–π - –∂–¥–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞.
        """
        ret = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è —Å–ª–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
        
        while True:
            word = self.read_word()  # –ß–∏—Ç–∞–µ–º –æ—á–µ—Ä–µ–¥–Ω–æ–µ —Å–ª–æ–≤–æ
            if not word:  # –ü—É—Å—Ç–æ–µ —Å–ª–æ–≤–æ –æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–Ω–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                break
            ret.append(word)  # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–≤–æ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
            
        return ret
        
    def login(self):
        """
        –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ —á–µ—Ä–µ–∑ API.
        
        –ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ API Mikrotik (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –¥–ª—è –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏–π):
        1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /login –¥–ª—è –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
        2. –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç (–≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç challenge)
        3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º /login —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª–µ–º
        4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç (!done = —É—Å–ø–µ—Ö, !trap = –æ—à–∏–±–∫–∞)
        
        –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≤–µ—Ä—Å–∏–∏:
        - RouterOS 6.43+ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –±–µ–∑ MD5 challenge)
        - RouterOS 7.x (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        
        Returns:
            bool: True –µ—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, False –ø—Ä–∏ –æ—à–∏–±–∫–µ
            
        Note:
            –í —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö RouterOS —Ç—Ä–µ–±–æ–≤–∞–ª—Å—è MD5-—Ö–µ—à –æ—Ç –ø–∞—Ä–æ–ª—è –∏ challenge.
            –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –ø—Ä—è–º—É—é –ø–µ—Ä–µ–¥–∞—á—É –ø–∞—Ä–æ–ª—è.
        """
        print("üîë –í—Ö–æ–¥...")
        
        # –®–∞–≥ 1: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        self.write_sentence(['/login'])
        self.read_sentence()  # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç (–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å challenge –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö)
        
        # –®–∞–≥ 2: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        # =name= –∏ =password= - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã API –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        self.write_sentence(['/login', f'=name={self.username}', f'=password={self.password}'])
        reply = self.read_sentence()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ –ø–µ—Ä–≤–æ–º—É —Å–ª–æ–≤—É –æ—Ç–≤–µ—Ç–∞
        if reply[0] == '!done':
            print("‚úì –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {reply}")
            return False

    def verify_script_exists(self, script_name):
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ.
        
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—É /system/script/print —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∏–º–µ–Ω–∏.
        –§–∏–ª—å—Ç—Ä ?name=script_name –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –≤—ã–≤–æ–¥ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–º —Å–∫—Ä–∏–ø—Ç–æ–º,
        —á—Ç–æ –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏ –±–æ–ª—å—à–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Å–∫—Ä–∏–ø—Ç–æ–≤.
        
        –ê–ª–≥–æ—Ä–∏—Ç–º –ø—Ä–æ–≤–µ—Ä–∫–∏:
        1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–µ—á–∞—Ç–∏ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∏–º–µ–Ω–∏
        2. –ß–∏—Ç–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è !done
        3. –ò—â–µ–º –≤ –æ—Ç–≤–µ—Ç–∞—Ö —Å—Ç—Ä–æ–∫–∏ —Å =name= –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
        4. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
        
        Args:
            script_name (str): –ò–º—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ, False –µ—Å–ª–∏ –Ω–µ—Ç
            
        Note:
            –ú–µ—Ç–æ–¥ –±–µ–∑–æ–ø–∞—Å–µ–Ω - –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞, —Ç–æ–ª—å–∫–æ —á–∏—Ç–∞–µ—Ç.
        """
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∏–º–µ–Ω–∏
        # ?name=script_name - —ç—Ç–æ —Ñ–∏–ª—å—Ç—Ä API –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        self.write_sentence(['/system/script/print', f'?name={script_name}'])
        
        exists = False  # –§–ª–∞–≥ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞
        
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
        while True:
            reply = self.read_sentence()
            if not reply:  # –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç - –∑–∞–≤–µ—Ä—à–∞–µ–º —á—Ç–µ–Ω–∏–µ
                break
                
            if reply[0] == '!re':  # !re –æ–∑–Ω–∞—á–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤ —Å—Ç—Ä–æ–∫–µ –¥–∞–Ω–Ω—ã—Ö
                for word in reply:
                    # –ò—â–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–º–µ–Ω–∏ –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                    if word.startswith('=name=') and word[6:] == script_name:
                        exists = True
                        break
            elif reply[0] == '!done':  # –ö–æ–Ω–µ—Ü –≤—ã–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥—ã
                break
                
        return exists

    def verify_scheduler_exists(self, scheduler_name):
        """
        –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —à–µ–¥—É–ª–µ—Ä–∞ –Ω–∞ —Ä–æ—É—Ç–µ—Ä–µ.
        
        –ê–Ω–∞–ª–æ–≥–∏—á–Ω–∞ verify_script_exists, –Ω–æ –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —à–µ–¥—É–ª–µ—Ä–æ–≤.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—É /system/scheduler/print –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á.
        
        –®–µ–¥—É–ª–µ—Ä—ã –≤ RouterOS:
        - –ü–æ–∑–≤–æ–ª—è—é—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
        - –ú–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –∏–ª–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏
        - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        
        Args:
            scheduler_name (str): –ò–º—è —à–µ–¥—É–ª–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            
        Returns:
            bool: True –µ—Å–ª–∏ —à–µ–¥—É–ª–µ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, False –µ—Å–ª–∏ –Ω–µ—Ç
            
        Note:
            –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤—ã—Ö —à–µ–¥—É–ª–µ—Ä–æ–≤
            –∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —à–µ–¥—É–ª–µ—Ä–æ–≤ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á.
        """
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤—ã–≤–æ–¥–∞ —à–µ–¥—É–ª–µ—Ä–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ –∏–º–µ–Ω–∏
        self.write_sentence(['/system/scheduler/print', f'?name={scheduler_name}'])
        
        exists = False  # –§–ª–∞–≥ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —à–µ–¥—É–ª–µ—Ä–∞
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∫—Ä–∏–ø—Ç–æ–≤
        while True:
            reply = self.read_sentence()
            if not reply:
                break
                
            if reply[0] == '!re':  # –°—Ç—Ä–æ–∫–∞ –¥–∞–Ω–Ω—ã—Ö —à–µ–¥—É–ª–µ—Ä–∞
                # –ò—â–µ–º –∏–º—è —à–µ–¥—É–ª–µ—Ä–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
                for word in reply:
                    if word.startswith('=name=') and word[6:] == scheduler_name:
                        exists = True
                        break
            elif reply[0] == '!done':  # –ö–æ–Ω–µ—Ü –≤—ã–≤–æ–¥–∞
                break
                
        return exists

    def remove_script(self, script_name):
        """
        –£–¥–∞–ª–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è.
        
        –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —É–¥–∞–ª–µ–Ω–∏—è:
        1. –ü–æ–ª—É—á–∞–µ–º ID —Å–∫—Ä–∏–ø—Ç–∞ —á–µ—Ä–µ–∑ /system/script/print —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
        2. –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω - —É–¥–∞–ª—è–µ–º –µ–≥–æ –ø–æ ID —á–µ—Ä–µ–∑ /system/script/remove
        3. –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ (–ø–∞—É–∑–∞ 1 —Å–µ–∫)
        4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
        5. –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
        
        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ ID –≤–º–µ—Å—Ç–æ –∏–º–µ–Ω–∏:
        - ID —É–Ω–∏–∫–∞–ª–µ–Ω –∏ –Ω–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è
        - –ò–∑–±–µ–≥–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º —Å –∏–º–µ–Ω–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        - –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –∞–¥—Ä–µ—Å–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ RouterOS
        
        Args:
            script_name (str): –ò–º—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª,
                  False –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
                  
        Note:
            –ú–µ—Ç–æ–¥ –±–µ–∑–æ–ø–∞—Å–µ–Ω - –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç True.
            –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è "–≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏".
        """
        # –®–∞–≥ 1: –ò—â–µ–º —Å–∫—Ä–∏–ø—Ç –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π ID
        self.write_sentence(['/system/script/print', f'?name={script_name}'])
        script_id = None  # ID —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Å–∏—Å—Ç–µ–º–µ RouterOS
        
        # –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º ID
        while True:
            reply = self.read_sentence()
            if not reply:
                break
                
            if reply[0] == '!re':  # –°—Ç—Ä–æ–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–∫—Ä–∏–ø—Ç–∞
                # –ò—â–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä .id –≤ –æ—Ç–≤–µ—Ç–µ
                for word in reply:
                    if word.startswith('=.id='):
                        script_id = word[5:]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "=.id="
                        break
            elif reply[0] == '!done':
                break
        
        # –®–∞–≥ 2: –ï—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–∞–π–¥–µ–Ω - —É–¥–∞–ª—è–µ–º –µ–≥–æ
        if script_id:
            # –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É ID
            self.write_sentence(['/system/script/remove', f'=.id={script_id}'])
            
            # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
            while True:
                reply = self.read_sentence()
                if not reply or reply[0] == '!done':
                    break
            
            # –ü–∞—É–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ RouterOS
            time.sleep(1)
            
            # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
            if self.verify_script_exists(script_name):
                print(f"‚ùå –û—à–∏–±–∫–∞: —Å–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω")
                return False
            return True
            
        # –°–∫—Ä–∏–ø—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - —Å—á–∏—Ç–∞–µ–º —á—Ç–æ —Ü–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞
        return True

    def remove_scheduler(self, scheduler_name):
        """
        –£–¥–∞–ª–µ–Ω–∏–µ —à–µ–¥—É–ª–µ—Ä–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π.
        
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—É /system/scheduler/remove —Å –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π find.
        –ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è [find name=scheduler_name] –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç ID —à–µ–¥—É–ª–µ—Ä–∞
        –ø–æ –∏–º–µ–Ω–∏ –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ remove.
        
        –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è find:
        - –û–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –≤–º–µ—Å—Ç–æ –¥–≤—É—Ö (–ø–æ–∏—Å–∫ + —É–¥–∞–ª–µ–Ω–∏–µ)
        - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –æ–±—ä–µ–∫—Ç–∞
        - –í—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è RouterOS, –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è
        
        Args:
            scheduler_name (str): –ò–º—è —à–µ–¥—É–ª–µ—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
            
        Returns:
            bool: True –µ—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ, False –ø—Ä–∏ –æ—à–∏–±–∫–µ
            
        Note:
            –ï—Å–ª–∏ —à–µ–¥—É–ª–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∫–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ –±–µ–∑ –æ—à–∏–±–æ–∫.
        """
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —à–µ–¥—É–ª–µ—Ä–∞ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        if self.verify_scheduler_exists(scheduler_name):
            # –£–¥–∞–ª—è–µ–º —à–µ–¥—É–ª–µ—Ä –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é find
            # [find name=...] –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID –æ–±—ä–µ–∫—Ç–∞ –ø–æ –∏–º–µ–Ω–∏
            self.write_sentence(['/system/scheduler/remove', f'=.id=[find name={scheduler_name}]'])
            reply = self.read_sentence()  # –ß–∏—Ç–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            
            # –ü–∞—É–∑–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏
            time.sleep(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —à–µ–¥—É–ª–µ—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
            if self.verify_scheduler_exists(scheduler_name):
                print(f"‚ùå –û—à–∏–±–∫–∞: —à–µ–¥—É–ª–µ—Ä {scheduler_name} –Ω–µ –±—ã–ª —É–¥–∞–ª–µ–Ω")
                return False
                
        return True

    def get_mikrotik_time(self):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–µ–¥—É–ª–µ—Ä–æ–≤.
        
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ–º–∞–Ω–¥—É /system/clock/print –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–æ—É—Ç–µ—Ä–∞.
        –î–æ–±–∞–≤–ª—è–µ—Ç 5 —Å–µ–∫—É–Ω–¥ –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —à–µ–¥—É–ª–µ—Ä–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º.
        
        –ó–∞—á–µ–º –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è —Ä–æ—É—Ç–µ—Ä–∞:
        - –®–µ–¥—É–ª–µ—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–æ—É—Ç–µ—Ä–∞, –Ω–µ –∫–ª–∏–µ–Ω—Ç–∞
        - –ò–∑–±–µ–≥–∞–µ–º –ø—Ä–æ–±–ª–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏
        - –£—á–∏—Ç—ã–≤–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—É—é —Ä–∞–∑–Ω–∏—Ü—É –≤–æ –≤—Ä–µ–º–µ–Ω–∏ –º–µ–∂–¥—É —Å–∏—Å—Ç–µ–º–∞–º–∏
        
        –õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏:
        - +5 —Å–µ–∫—É–Ω–¥: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —à–µ–¥—É–ª–µ—Ä–∞
        - –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–∫—É–Ω–¥/–º–∏–Ω—É—Ç/—á–∞—Å–æ–≤
        - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å
        
        Returns:
            str: –í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM:SS –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —à–µ–¥—É–ª–µ—Ä–µ
            None: –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
            
        Example:
            –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Ä–æ—É—Ç–µ—Ä–∞ 14:30:25, –º–µ—Ç–æ–¥ –≤–µ—Ä–Ω–µ—Ç "14:30:30"
        """
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —á–∞—Å–∞—Ö —Ä–æ—É—Ç–µ—Ä–∞
        self.write_sentence(['/system/clock/print'])
        clock_data = self.read_sentence()
        
        # –ò—â–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –≤—Ä–µ–º–µ–Ω–∏ –≤ –æ—Ç–≤–µ—Ç–µ
        for line in clock_data:
            if line.startswith('=time='):
                time_str = line[6:]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "=time="
                try:
                    # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ HH:MM:SS
                    h, m, s = map(int, time_str.split(':'))
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —à–µ–¥—É–ª–µ—Ä–∞ –≤ –±—É–¥—É—â–µ–º
                    s += 5
                    
                    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
                    if s >= 60:  # –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–µ–∫—É–Ω–¥
                        s -= 60
                        m += 1
                        if m >= 60:  # –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–Ω—É—Ç
                            m -= 60
                            h += 1
                            if h >= 24:  # –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–∏–µ —á–∞—Å–æ–≤ (–ø–µ—Ä–µ—Ö–æ–¥ —á–µ—Ä–µ–∑ –ø–æ–ª–Ω–æ—á—å)
                                h -= 24
                                
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
                    return f"{h:02d}:{m:02d}:{s:02d}"
                except ValueError:
                    # –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏ - –ø—Ä–µ—Ä—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                    break
                    
        return None  # –í—Ä–µ–º—è –Ω–µ –ø–æ–ª—É—á–µ–Ω–æ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    
    def upload_script(self, script_name, content):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π"""
        # –î–ª—è –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
        if len(content) > 15000 and not script_name.endswith(('-TEMP1', '-TEMP2', '-Combine')):
            return self.upload_large_script(script_name, content)
        
        sock = None
        try:
            print(f"\nüì§ {script_name} ({len(content)} –±–∞–π—Ç)...")
            
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(60)
            sock.connect((self.router_ip, self.port))
            self.sock = sock
            
            if not self.login():
                return False
    
            time.sleep(2)
            
            # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
            if not self.remove_script(script_name):
                return False
            
            content = content.replace('\r\n', '\n').replace('\r', '\n')
            
            # –ó–∞–≥—Ä—É–∑–∫–∞
            self.write_sentence([
                '/system/script/add',
                f'=name={script_name}',
                f'=source={content}',
                '=policy=read,write,policy,test'
            ])
            
            # –ß–∏—Ç–∞–µ–º –≤—Å–µ –æ—Ç–≤–µ—Ç—ã –¥–æ !done
            success = False
            while True:
                reply = self.read_sentence()
                if not reply:
                    break
                if reply[0] == '!done':
                    success = True
                    break
                elif reply[0] == '!trap':
                    print(f"‚ùå –û—à–∏–±–∫–∞: {reply}")
                    return False
            
            if success:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω
                if self.verify_script_exists(script_name):
                    print(f"‚úÖ {script_name} –∑–∞–≥—Ä—É–∂–µ–Ω")
                    self.uploaded_count += 1
                    return True
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞: —Å–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏")
                    self.failed_count += 1
                    return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ {script_name}: –Ω–µ –ø–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç !done")
                self.failed_count += 1
                return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ {script_name}: {e}")
            self.failed_count += 1
            return False
        finally:
            if sock:
                sock.close()
            time.sleep(3)

    def upload_large_script(self, script_name, content):
        """
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                    –ó–ê–ì–†–£–ó–ö–ê –ë–û–õ–¨–®–ò–• –°–ö–†–ò–ü–¢–û–í (>15KB)
        ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
        
        –°–ª–æ–∂–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ö–æ–¥–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π RouterOS API –Ω–∞ —Ä–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã.
        
        –ü–†–û–ë–õ–ï–ú–ê:
        RouterOS API –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏–º–µ—Ä–Ω–æ 16KB.
        –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ–ª—å—à–∏–π —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –æ—à–∏–±–∫–µ –ø–µ—Ä–µ–¥–∞—á–∏.
        
        –†–ï–®–ï–ù–ò–ï - –ê–†–•–ò–¢–ï–ö–¢–£–†–ê –†–ê–ó–î–ï–õ–ï–ù–ò–Ø:
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ 1. –†–ê–ó–î–ï–õ–ï–ù–ò–ï    ‚îÇ –§–∞–π–ª ‚Üí —á–∞—Å—Ç–∏ –ø–æ 15KB                       ‚îÇ
        ‚îÇ 2. –ó–ê–ì–†–£–ó–ö–ê      ‚îÇ –ß–∞—Å—Ç–∏ ‚Üí –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã (-TEMP1, -TEMP2) ‚îÇ
        ‚îÇ 3. –û–ë–™–ï–î–ò–ù–ò–¢–ï–õ–¨  ‚îÇ –°–æ–∑–¥–∞–Ω–∏–µ combine-—Å–∫—Ä–∏–ø—Ç–∞                   ‚îÇ
        ‚îÇ 4. –ü–õ–ê–ù–ò–†–û–í–©–ò–ö   ‚îÇ Scheduler –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è       ‚îÇ
        ‚îÇ 5. –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï   ‚îÇ Combine —Å–æ–∑–¥–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç           ‚îÇ
        ‚îÇ 6. –û–ß–ò–°–¢–ö–ê       ‚îÇ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞   ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        
        –ü–û–ß–ï–ú–£ –ù–£–ñ–ï–ù SCHEDULER:
        - API –∫–æ–º–∞–Ω–¥—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        - Combine-—Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç API —Å–µ—Å—Å–∏–∏
        - Scheduler –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è
        
        –°–•–ï–ú–ê –ò–ú–ï–ù–û–í–ê–ù–ò–Ø:
        ‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª: "MyScript"
        ‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —á–∞—Å—Ç–∏: "MyScript-TEMP1", "MyScript-TEMP2", ...
        ‚Ä¢ –û–±—ä–µ–¥–∏–Ω—è—é—â–∏–π —Å–∫—Ä–∏–ø—Ç: "MyScript-Combine"
        ‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: "run-MyScript-combine"
        
        Args:
            script_name (str): –ò–º—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
            content (str): –ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–∫—Ä–∏–ø—Ç–∞ (>15KB)
            
        Returns:
            bool: True –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–∏, False –ø—Ä–∏ –æ—à–∏–±–∫–µ
            
        –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ú–û–ú–ï–ù–¢–´:
        - –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        - –í—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—á–∏—â–µ–Ω—ã –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        """
        print(f"\nüì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –±–æ–ª—å—à–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ {script_name} ({len(content)} –±–∞–π—Ç)")
        print(f"‚ö†Ô∏è  –†–∞–∑–º–µ—Ä –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç API - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏")
        
        try:
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 1: –ü–û–î–ì–û–¢–û–í–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø ‚ïê‚ïê‚ïê
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
            # –≠—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –æ—Ç –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(60)
            sock.connect((self.router_ip, self.port))
            self.sock = sock
            
            if not self.login():
                return False
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 2: –†–ê–ó–î–ï–õ–ï–ù–ò–ï –ù–ê –ß–ê–°–¢–ò ‚ïê‚ïê‚ïê
            parts = []
            chunk_size = 15000  # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —á–∞—Å—Ç–∏ (–º–µ–Ω—å—à–µ –ª–∏–º–∏—Ç–∞ API)
            
            # –†–∞–∑–¥–µ–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–∞ —Ä–∞–≤–Ω—ã–µ —á–∞—Å—Ç–∏
            for start_pos in range(0, len(content), chunk_size):
                end_pos = start_pos + chunk_size
                part_content = content[start_pos:end_pos]
                parts.append(part_content)
            
            print(f"üìë –§–∞–π–ª —Ä–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ {len(parts)} —á–∞—Å—Ç–µ–π –ø–æ {chunk_size} –±–∞–π—Ç")
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 3: –ó–ê–ì–†–£–ó–ö–ê –í–†–ï–ú–ï–ù–ù–´–• –ß–ê–°–¢–ï–ô ‚ïê‚ïê‚ïê
            print(f"üì§ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É {len(parts)} –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π...")
            
            for part_index, part_content in enumerate(parts, 1):
                temp_script_name = f"{script_name}-TEMP{part_index}"
                print(f"\n  üìã –ß–∞—Å—Ç—å {part_index}/{len(parts)}: {temp_script_name}")
                print(f"     –†–∞–∑–º–µ—Ä: {len(part_content)} –±–∞–π—Ç")
                
                # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
                if not self.remove_script(temp_script_name):
                    raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–π {temp_script_name}")
                
                # –ó–∞–≥—Ä—É–∑–∫–∞ —á–∞—Å—Ç–∏ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
                self.write_sentence([
                    '/system/script/add',
                    f'=name={temp_script_name}',
                    f'=source={part_content}',
                    '=policy=read,write,policy,test'
                ])
                
                # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
                upload_success = False
                while True:
                    reply = self.read_sentence()
                    if not reply:
                        break
                    if reply[0] == '!done':
                        upload_success = True
                        break
                    elif reply[0] == '!trap':
                        raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Å—Ç–∏ {part_index}: {reply}")
                
                if not upload_success:
                    raise Exception(f"–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–ª—è —á–∞—Å—Ç–∏ {part_index}")
                
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Å—Ç–∏
                if not self.verify_script_exists(temp_script_name):
                    raise Exception(f"–ß–∞—Å—Ç—å {temp_script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏")
                
                print(f"     ‚úÖ {temp_script_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
                time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É —á–∞—Å—Ç—è–º–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
                
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 4: –°–û–ó–î–ê–ù–ò–ï –û–ë–™–ï–î–ò–ù–Ø–Æ–©–ï–ì–û –°–ö–†–ò–ü–¢–ê ‚ïê‚ïê‚ïê
            print(f"\nüîÑ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–¥–∏–Ω—è—é—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–¥ combine-—Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞ —è–∑—ã–∫–µ RouterOS
            combine_script_code = f"""# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò –°–û–ó–î–ê–ù–ù–´–ô –û–ë–™–ï–î–ò–ù–Ø–Æ–©–ò–ô –°–ö–†–ò–ü–¢
# –°–∫—Ä–∏–ø—Ç: {script_name}
# –ß–∞—Å—Ç–µ–π: {len(parts)}
# –°–æ–∑–¥–∞–Ω: {time.strftime('%Y-%m-%d %H:%M:%S')}
# –°–∏—Å—Ç–µ–º–∞: MikrotikUploader v2.0
# ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

:local finalContent ""
:local partContent ""

# === –ß–¢–ï–ù–ò–ï –ò –û–ë–™–ï–î–ò–ù–ï–ù–ò–ï –í–°–ï–• –ß–ê–°–¢–ï–ô ===
:log info "–ù–∞—á–∏–Ω–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ {len(parts)} —á–∞—Å—Ç–µ–π —Å–∫—Ä–∏–ø—Ç–∞ {script_name}"
"""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏
            for part_num in range(1, len(parts) + 1):
                combine_script_code += f"""
# --- –ß—Ç–µ–Ω–∏–µ —á–∞—Å—Ç–∏ {part_num} ---
:log info "–ß–∏—Ç–∞–µ–º —á–∞—Å—Ç—å {part_num}: {script_name}-TEMP{part_num}"
:set partContent [/system script get {script_name}-TEMP{part_num} source]
:set finalContent ($finalContent . $partContent)
:log info "–ß–∞—Å—Ç—å {part_num} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫ –æ–±—â–µ–º—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É"
"""
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
            combine_script_code += f"""
# === –°–û–ó–î–ê–ù–ò–ï –§–ò–ù–ê–õ–¨–ù–û–ì–û –°–ö–†–ò–ü–¢–ê ===
:log info "–°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç: {script_name}"
/system script add name="{script_name}" source=$finalContent policy=read,write,policy,test
:log info "–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç {script_name} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"

# === –û–ß–ò–°–¢–ö–ê –í–†–ï–ú–ï–ù–ù–´–• –§–ê–ô–õ–û–í ===
:log info "–ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"
"""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã —É–¥–∞–ª–µ–Ω–∏—è –≤—Å–µ—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–µ–π
            for part_num in range(1, len(parts) + 1):
                combine_script_code += f"""
:log info "–£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —á–∞—Å—Ç—å: {script_name}-TEMP{part_num}"
/system script remove [find name="{script_name}-TEMP{part_num}"]
"""
            
            combine_script_code += f"""
:log info "–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ {script_name} –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
"""
            
            # –í—ã–≤–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ combine-—Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            print(f"\nüìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ–±—ä–µ–¥–∏–Ω—è—é—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞:")
            print("‚ïê" * 60)
            print(combine_script_code)
            print("‚ïê" * 60)
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 5: –ó–ê–ì–†–£–ó–ö–ê COMBINE-–°–ö–†–ò–ü–¢–ê ‚ïê‚ïê‚ïê
            combine_script_name = f"{script_name}-Combine"
            print(f"\nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä–µ–¥–∏–Ω—è—é—â–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞: {combine_script_name}")
            
            # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ combine-—Å–∫—Ä–∏–ø—Ç–∞
            if not self.remove_script(combine_script_name):
                raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–π {combine_script_name}")
            
            # –ó–∞–≥—Ä—É–∑–∫–∞ combine-—Å–∫—Ä–∏–ø—Ç–∞
            self.write_sentence([
                '/system/script/add',
                f'=name={combine_script_name}',
                f'=source={combine_script_code}',
                '=policy=read,write,policy,test'
            ])
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
            combine_uploaded = False
            while True:
                reply = self.read_sentence()
                if not reply:
                    break
                if reply[0] == '!done':
                    combine_uploaded = True
                    break
                elif reply[0] == '!trap':
                    raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ combine-—Å–∫—Ä–∏–ø—Ç–∞: {reply}")
            
            if not combine_uploaded:
                raise Exception("–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ combine-—Å–∫—Ä–∏–ø—Ç–∞")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è combine-—Å–∫—Ä–∏–ø—Ç–∞
            if not self.verify_script_exists(combine_script_name):
                raise Exception(f"Combine-—Å–∫—Ä–∏–ø—Ç {combine_script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏")
            
            print(f"‚úÖ {combine_script_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 6: –°–û–ó–î–ê–ù–ò–ï –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê ‚ïê‚ïê‚ïê
            # –ü–æ–ª—É—á–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            execution_time = self.get_mikrotik_time()
            if not execution_time:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Ä–æ—É—Ç–µ—Ä–∞")
            
            scheduler_name = f"run-{script_name}-combine"
            print(f"‚è∞ –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ {scheduler_name} –Ω–∞ –≤—Ä–µ–º—è {execution_time}")
            
            # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            if not self.remove_scheduler(scheduler_name):
                raise Exception(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–π –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ {scheduler_name}")
            
            # –ö–æ–º–∞–Ω–¥–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω–∞—è):
            # 1. –ó–∞–ø—É—Å–∫ combine-—Å–∫—Ä–∏–ø—Ç–∞
            # 2. –ü–∞—É–∑–∞ 2 —Å–µ–∫—É–Ω–¥—ã –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            # 3. –£–¥–∞–ª–µ–Ω–∏–µ combine-—Å–∫—Ä–∏–ø—Ç–∞ (—Å–∞–º–æ–æ—á–∏—Å—Ç–∫–∞)
            # 4. –£–¥–∞–ª–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (—Å–∞–º–æ—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ)
            scheduler_command = (
                f"/system script run {script_name}-Combine; "
                f":delay 2s; "
                f"/system script remove {script_name}-Combine; "
                f"/system scheduler remove {scheduler_name}"
            )
            
            print(f"üìã –ö–æ–º–∞–Ω–¥–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {scheduler_command}")
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            self.write_sentence([
                '/system/scheduler/add',
                f'=name={scheduler_name}',
                f'=on-event={scheduler_command}',
                f'=start-time={execution_time}',
                '=interval=0s',  # –û–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
                '=policy=read,write,policy,test'
            ])
            
            # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
            scheduler_created = False
            while True:
                reply = self.read_sentence()
                if not reply:
                    break
                if reply[0] == '!done':
                    scheduler_created = True
                    break
                elif reply[0] == '!trap':
                    raise Exception(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞: {reply}")
            
            if not scheduler_created:
                raise Exception("–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞")
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 7: –û–ñ–ò–î–ê–ù–ò–ï –í–´–ü–û–õ–ù–ï–ù–ò–Ø ‚ïê‚ïê‚ïê
            print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è...")
            print(f"   –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –≤ {execution_time}")
            print(f"   –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ 30 —Å–µ–∫—É–Ω–¥...")
            
            # –£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
            # –£—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ combine-—Å–∫—Ä–∏–ø—Ç–∞ –∏ –æ—á–∏—Å—Ç–∫—É
            time.sleep(30)
            
            # ‚ïê‚ïê‚ïê –≠–¢–ê–ü 8: –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê ‚ïê‚ïê‚ïê
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è...")
            
            if not self.verify_script_exists(script_name):
                raise Exception(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è")
            
            print(f"‚úÖ –ë–æ–ª—å—à–æ–π —Å–∫—Ä–∏–ø—Ç {script_name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω!")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {len(parts)} —á–∞—Å—Ç–µ–π ‚Üí 1 —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç")
            
            self.uploaded_count += 1
            return True
            
        except Exception as error:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–æ–ª—å—à–æ–≥–æ —Ñ–∞–π–ª–∞:")
            print(f"   {error}")
            print(f"üßπ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤")
            self.failed_count += 1
            return False
        finally:
            # ‚ïê‚ïê‚ïê –û–ß–ò–°–¢–ö–ê –†–ï–°–£–†–°–û–í ‚ïê‚ïê‚ïê
            if 'sock' in locals():
                sock.close()
            # –ü–∞—É–∑–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–æ—Å–ª–µ —Å–ª–æ–∂–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
            time.sleep(3)
    
    def list_scripts(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã."""
        try:
            self.connect()
            if not self.login():
                return
        
            self.write_sentence(['/system/script/print'])
            
            nasos_scripts = []
            while True:
                reply = self.read_sentence()
                if not reply or reply[0] == '!done':
                    break
                
                if reply[0] == '!re':
                    for item in reply:
                        if item.startswith('=name='):
                            script_name = item[6:]
                            if script_name.startswith('Nasos-'):
                                nasos_scripts.append(script_name)
            
            print(f"\nüìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ Nasos —Å–∫—Ä–∏–ø—Ç–æ–≤: {len(nasos_scripts)}")
            for script in sorted(nasos_scripts):
                print(f"  ‚Ä¢ {script}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        finally:
            self.sock.close()

    def upload_modules(self, module_names=None):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º –ø–∞–ø–∫–∏ CodeNasos."""
        # –ò—â–µ–º –ø–∞–ø–∫—É CodeNasos –Ω–∞—á–∏–Ω–∞—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –∏ –ø–æ–¥–Ω–∏–º–∞—è—Å—å –≤–≤–µ—Ä—Ö
        script_dir = find_codenosos_dir()
        
        if not script_dir:
            print("‚ùå –ü–∞–ø–∫–∞ CodeNasos –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–∞–ø–∫–∞ CodeNasos —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø—Ä–æ–µ–∫—Ç–µ")
            return
        
        print(f"üìÅ –ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ CodeNasos: {script_dir}")
        
        if module_names is None:
            # –í—Å–µ .rsc —Ñ–∞–π–ª—ã
            rsc_files = glob.glob(os.path.join(script_dir, '*.rsc'))
        else:
            # –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
            rsc_files = []
            for name in module_names:
                if not name.endswith('.rsc'):
                    name += '.rsc'
                file_path = os.path.join(script_dir, name)
                if os.path.exists(file_path):
                    rsc_files.append(file_path)
                else:
                    print(f"‚ùå –§–∞–π–ª {name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {script_dir}")
        
        if not rsc_files:
            print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
            print(f"üìç –ü–æ–∏—Å–∫ –≤: {script_dir}")
            return
            
        print(f"üìã –ö –∑–∞–≥—Ä—É–∑–∫–µ: {len(rsc_files)} –º–æ–¥—É–ª–µ–π")
        
        self.uploaded_count = 0
        self.failed_count = 0
        
        for i, file_path in enumerate(sorted(rsc_files), 1):
            try:
                filename = os.path.basename(file_path)
                script_name = filename.replace('.rsc', '')
                
                print(f"[{i}/{len(rsc_files)}] {filename}")
                
                try:
                    with codecs.open(file_path, 'r', encoding='utf-8-sig') as f:
                        content = f.read()
                except UnicodeDecodeError:
                    with codecs.open(file_path, 'r', encoding='windows-1251') as f:
                        content = f.read()
                
                self.upload_script(script_name, content)
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ {filename}: {e}")
                self.failed_count += 1
        
        print(f"\nüìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {self.uploaded_count}, –û—à–∏–±–æ–∫: {self.failed_count}")

def main():
    uploader = MikrotikUploader()
    
    if len(sys.argv) == 1:
        # –ë–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ - –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ
        print("üéØ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π NasosRunner")
        uploader.upload_modules()
    elif sys.argv[1] == 'list':
        # –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ
            uploader.list_scripts()
    else:
        # –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–æ–¥—É–ª–∏
        modules = sys.argv[1:]
        print(f"üéØ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π: {', '.join(modules)}")
        uploader.upload_modules(modules)

if __name__ == '__main__':
    main()
